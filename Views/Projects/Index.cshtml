@using BugTracker.Models.Enums;
@using BugTracker.Services.Interfaces;
@using Microsoft.AspNetCore.Identity;
@model IEnumerable<BugTracker.Models.Project>

@inject IBTProjectService _projectService;
@inject UserManager<BTUser> _userManager;

@{
    ViewData["Title"] = "Index";
}

<div class="container intro-y">
    <div class="d-flex mt-8 align-items-center">
        <span class="fs-lg fw-medium mt-3">@ViewBag.Heading</span>
    @if (User.IsInRole(nameof(BTRoles.Admin)) || User.IsInRole(nameof(BTRoles.ProjectManager)))
    {
        <span class="ms-5"><a asp-controller="Projects" asp-action="Create" class="btn btn-rounded-primary mt-3">New Project</a></span>
    }
    </div>
    <div class="grid columns-12 gap-6 mt-3">
        <table class="table table-report">
            <thead>
                <tr>
                    <th class="border-bottom-0 text-nowrap">Project Name</th>
                    <th class="border-bottom-0 text-nowrap">Project Manager</th>
                    <th class="border-bottom-0 text-nowrap">Developers</th>
                    <th class="border-bottom-0 text-nowrap">Submitters</th>
                    <th class="border-bottom-0 text-nowrap">Tickets</th>
                    <th class="border-bottom-0 text-nowrap"></th>
                </tr>
            </thead>
            <tbody>
                @foreach(Project project in Model)
                {
                    <tr class="text-nowrap">
                        <td>@project.Name</td>
                        @{
                            BTUser? pm = await _projectService.GetProjectManagerAsync(project.Id, project.CompanyId);
                        }
                        @if(@pm is null)
                        {
                            <td class="text-danger">Unassigned</td>
                        }
                        else
                        {
                            <td>@pm.FullName</td>
                        }
                        <td>@((await _projectService.GetProjectMembersByRoleAsync(project.Id, nameof(BTRoles.Developer), project.CompanyId)).Count)</td>
                        <td>@((await _projectService.GetProjectMembersByRoleAsync(project.Id,nameof(BTRoles.Submitter),project.CompanyId)).Count)</td>
                        <td>@project.Tickets.Count</td>
                        <td>
                            <a asp-controller="Projects" asp-action="Details" asp-route-id="@project.Id" class="btn btn-rounded-success me-1">Details</a>
                            @if (User.IsInRole(nameof(BTRoles.Admin)) || (User.IsInRole(nameof(BTRoles.ProjectManager)) && pm is not null && pm.Id == _userManager.GetUserId(User)))
                            {
                                if (project.Archived)
                                {
                                    <a asp-controller="Projects" asp-action="Restore" asp-route-id="@project.Id" class="btn btn-rounded-dark">Restore</a>
                                }
                                else
                                {
                                    <a asp-controller="Projects" asp-action="Archive" asp-route-id="@project.Id" class="btn btn-rounded-danger">Archive</a>
                                }
                            }
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>



