@using BugTracker.Extensions;
@using BugTracker.Models.Enums;
@using BugTracker.Services.Interfaces;
@using Microsoft.AspNetCore.Identity;
@model BugTracker.Models.Ticket

@inject IBTFileService _fileService;
@inject IBTProjectService _projectService;
@inject UserManager<BTUser> _userManager;

@{
    ViewData["Title"] = "Details";
    BTUser? pm = await _projectService.GetProjectManagerAsync(Model.Project!.Id, Model.Project!.CompanyId);
    string userId = _userManager.GetUserId(User)!;
}

<div class="container intro-y">
    <div class="row g-5 mt-5">
        <div class="col-6 d-flex">
            <div class="box py-5 px-10 d-flex flex-column flex-1">
                <div class="d-flex mb-5">
                    <div class="fs-lg fw-medium">@Model.Project.Name<span>: </span>@Model.Title</div>
                    @if (User.IsInRole(nameof(BTRoles.Admin))
                        || (User.IsInRole(nameof(BTRoles.ProjectManager)) && pm is not null && pm.Id == userId)
                        || (Model.DeveloperUser is not null && Model.DeveloperUser.Id == userId)
                        || (Model.SubmitterUser is not null && Model.SubmitterUser.Id == userId))
                    {
                        <div class="ms-auto">
                            <span><a asp-controller="Tickets" asp-action="Edit" asp-route-id="@Model.Id" class="btn btn-rounded-primary me-1">Edit</a></span>
                            @if (Model.Archived)
                            {
                                <span><a asp-controller="Tickets" asp-action="Restore" asp-route-id="@Model.Id" class="btn btn-rounded-dark">Restore</a></span>
                            }
                            else
                            {
                                <span><a asp-controller="Tickets" asp-action="Archive" asp-route-id="@Model.Id" class="btn btn-rounded-danger">Archive</a></span>
                            }
                        </div>
                    }
                </div>
                <div class="text-lead mt-5">@Model.Description</div>
                <div class="d-flex mt-auto align-content-between">
                    <span class="fs-5 btn btn-secondary me-5">Created: @Model.Created.ToString("MM-dd-yyyy")</span>
                    @if(Model.Updated is not null)
                    {
                        <span class="fs-5 btn btn-secondary me-5">Last Updated: @Model.Updated.Value.ToString("MM-dd-yyyy")</span>
                    }
                    @if (Model.Archived)
                    {
                        <span class="fs-5 btn btn-dark">Archived</span>
                    }
                </div>
            </div>
        </div>
        <div class="col-3 d-flex">
            <div class="box p-5">
                <div class="fs-lg fw-medium">Ticket Attachments</div>
                <form asp-action="AddTicketAttachment" asp-controller="Tickets" enctype="multipart/form-data" method="post">
                    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                    <input type="hidden" asp-for="@Model.Id" name="TicketId">
                    <label class="mt-3">
                        Description
                        <input asp-for="@Model.Attachments.FirstOrDefault().Description" type="text" class="form-control" />
                    </label><br />
                    <label class="btn btn-outline-primary btn-sm mt-3">
                        <input asp-for="@Model.Attachments.FirstOrDefault().FormFile" type="file" class="form-control-file" />
                    </label>
                    <button type="submit" class="btn btn-outline-secondary btn-sm md-btn-flat my-3">Submit</button>
                </form>
                <hr />
                <h6 class="mt-3">Attachments</h6>
                <div class="container">
                    <div class="row">
                        @foreach (TicketAttachment item in Model.Attachments)
                        {
                            <div class="col col-sm-2">
                                <a asp-action="ShowFile" asp-controller="Tickets" asp-route-Id="@item.Id">
                                    <div class="icon">
                                        <img src="@_fileService.GetFileIcon(item.FileName)" style="height:50px;width:50px" data-bs-toggle="tooltip" data-bs-placement="top" title="" data-bs-original-title="@item.FileName" />
                                    </div>
                                </a>
                                <div style="font-size:x-small">
                                    <div class="file-name">
                                        <strong>@item.Description</strong>
                                    </div>
                                    <small>Size: @_fileService.FormatFileSize(item.FileData.Length) </small>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
        <div class="col-3 d-flex">
            <div class="box p-5 d-flex flex-column flex-1">
                <div class="d-flex">
                    <div class="fs-lg fw-medium">Developer</div>
                    @if (User.IsInRole(nameof(BTRoles.Admin)) || (User.IsInRole(nameof(BTRoles.ProjectManager)) && pm is not null && pm.Id == _userManager.GetUserId(User)))
                    {
                        <div class="ms-auto">
                            <a href="javascript:;" data-bs-toggle="modal" data-bs-target="#assigndev-modal" class="btn btn-rounded-primary">Assign</a>
                        </div>
                    }
                </div>
                @if(Model.DeveloperUser is not null)
                {
                    <div class="fs-xl fw-medium mt-3">@Model.DeveloperUser.FullName</div>
                }
                else
                {
                    <div class="fs-xl fw-medium mt-3 text-danger">Unassigned</div>
                }
            </div>
        </div>
        <div class="col-3 d-flex">
            <div class="box p-5 d-flex flex-column flex-1">
                <div class="fs-lg fw-medium">Status</div>
                <div class="fs-xl fw-medium mt-3">@Model.TicketStatus!.Name</div>
            </div>
        </div>
        <div class="col-3 d-flex">
            <div class="box p-5 d-flex flex-column flex-1">
                <div class="fs-lg fw-medium">Type</div>
                <div class="fs-xl fw-medium mt-3">@Model.TicketType!.Name</div>
            </div>
        </div>
        <div class="col-3 d-flex">
            <div class="box p-5 d-flex flex-column flex-1">
                <div class="fs-lg fw-medium">Priority</div>
                <div class="fs-xl fw-medium mt-3">@Model.TicketPriority!.Name</div>
            </div>
        </div>
        <div class="col-3 d-flex">
            <div class="box p-5 d-flex flex-column flex-1">
                <div class="fs-lg fw-medium">Submitter</div>
                @if (Model.SubmitterUser is not null)
                {
                    <div class="fs-xl fw-medium mt-3">@Model.SubmitterUser.FullName</div>
                }
                else
                {
                    <div class="fs-xl fw-medium mt-3">None</div>
                }
            </div>
        </div>
    </div>

    <div class="row g-5 mt-5">
        <div class="col-8">
            <form asp-action="AddTicketComment" asp-controller="Tickets" enctype="multipart/form-data" method="post">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <input type="hidden" asp-for="@Model.Id" name="TicketId">
                <div class="media-body ml-3">
                    <label>
                        Add A Comment:
                        <textarea id="editor" name="comment" class="form-control"></textarea>
                    </label><br />
                    <button type="submit" class="btn btn-outline-secondary btn-sm md-btn-flat">Submit</button>
                </div>
            </form>
            <div class="box p-5">
                <h6>Comments</h6>
                <ul class="right_chat list-unstyled mb-0">
                    @*Loop to show comments made for the Ticket*@
                    @foreach (TicketComment comment in Model.Comments)
                    {
                        <li>
                            <div class="box bg-secondary p-2 m-2">
                                <div class="fs-md fw-medium">@comment.User!.FullName</div>
                                <div class="text-lead mt-2">@comment.Comment</div>
                            </div>
                        </li>
                    }
                </ul>
            </div>
        </div>
        <div class="col-4">
            <div class="fs-lg fw-medium text-center">History</div>
            @foreach (TicketHistory history in Model.History)
            {
                <div class="box p-2 m-2">
                    <div class="fs-md fw-medium">@history.PropertyName</div>
                    <div class="text-lead mt-1">@history.Description</div>
                </div>
            }
        </div>
    </div>
</div>

<!-- BEGIN: Modal Content -->
<div id="assigndev-modal" class="modal fade" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            @{
                List<BTUser> developers = await _projectService.GetProjectMembersByRoleAsync(Model.ProjectId, nameof(BTRoles.Developer), User.Identity!.GetCompanyId());
                BTUser? currentDev = Model.DeveloperUser;
                SelectList devList = new SelectList(developers, "Id", "FullName", currentDev?.Id);
            }
            <form asp-action="AssignDeveloper" method="post" class="d-flex flex-column">
                <!-- BEGIN: Modal Header -->
                <div class="modal-header">
                    <h2 class="fw-medium fs-base">Assign Developer</h2>
                </div> <!-- END: Modal Header -->
                <!-- BEGIN: Modal Body -->
                <div class="modal-body">
                        <input type="hidden" value="@Model.Id" name="ticketId" />
                        <select class="form-select" asp-items="devList" name="devId">
                            <option value="">Unassigned</option>
                        </select>
                </div> <!-- END: Modal Body -->
                <!-- BEGIN: Modal Footer -->
                <div class="modal-footer text-end"> <button type="button" data-bs-dismiss="modal" class="btn btn-outline-secondary w-20 me-1">Cancel</button> <button type="submit" class="btn btn-primary w-20">Save</button> </div> <!-- END: Modal Footer -->
            </form>
        </div>
    </div>
</div> <!-- END: Modal Content -->
